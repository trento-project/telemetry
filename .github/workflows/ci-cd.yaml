name: Continous Integration and Deployment
concurrency: ci-${{ github.ref }}
on:
  push:
    tags-ignore:
      - "*"
    branches:
      - "main"
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

env:
  TELEMETRY_INFLUXDB_URL: http://localhost:8086
  TELEMETRY_INFLUXDB_TOKEN: my-super-secret-auth-token
  TELEMETRY_INFLUXDB_ORG: test
  TELEMETRY_INFLUXDB_BUCKET: test
  
  TELEMETRY_DB_HOST: localhost
  TELEMETRY_DB_PORT: 5432
  TELEMETRY_DB_USER: telemetry
  TELEMETRY_DB_PASSWORD: telemetry
  TELEMETRY_DB_NAME: telemetry

jobs:
  test:
    runs-on: ubuntu-20.04
    services:
      influxdb:
        image: influxdb:2.0
        env:
          DOCKER_INFLUXDB_INIT_MODE: setup
          DOCKER_INFLUXDB_INIT_USERNAME: test
          DOCKER_INFLUXDB_INIT_PASSWORD: my-secret-password
          DOCKER_INFLUXDB_INIT_ORG: ${{ env.TELEMETRY_INFLUXDB_ORG }}
          DOCKER_INFLUXDB_INIT_BUCKET: ${{ env.TELEMETRY_INFLUXDB_BUCKET }}
          DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${{ env.TELEMETRY_INFLUXDB_TOKEN }}
        ports:
          - 8086:8086
      database:
        image: postgres:14-alpine
        env:
          POSTGRES_DB: ${{ env.TELEMETRY_DB_NAME }}
          POSTGRES_PASSWORD: ${{ env.TELEMETRY_DB_PASSWORD }}
          POSTGRES_USER: ${{ env.TELEMETRY_DB_USER }}
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - uses: actions/cache@v2
        id: go-cache
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: get git tags
        run: git fetch --prune --unshallow --tags
      - name: test
        run: make test
      - name: static analysis
        run: make vet-check
      - name: coding styles
        run: make fmt-check

  build-and-push-images:
    runs-on: ubuntu-20.04
    #if: github.event_name == 'release' || (github.event_name == 'push' && github.ref_name == 'main') || github.event_name == 'workflow_dispatch'
    needs: test
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - name: telemetry
            dockerfile: Dockerfile
          - name: telemetry-grafana
            dockerfile: Dockerfile.Grafana
    env:
      REGISTRY: ghcr.io
      IMAGE_REPOSITORY: ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}
      IMAGE_TAG: "${{ (github.event_name == 'release' && github.event.release.tag_name) || (github.event_name == 'push' && github.ref_name == 'main' && 'rolling') || github.sha }}"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.IMAGE_REPOSITORY }}
      - name: Build and push container image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./${{ matrix.dockerfile }}
          push: true
          tags: ${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
